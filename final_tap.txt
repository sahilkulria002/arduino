// === Automatic Tap Control (slow + strong motor mode) ===
// Hardware:
//  - IR sensor OUT -> pin 8 (LOW when hand present)
//  - L298N IN1 -> pin 6
//  - L298N IN2 -> pin 7
//  - L298N ENA -> pin 9 (PWM)
//  - LED indicator -> pin 12
//  - Motor power 12 V (shared GND with Arduino)

const int enA = 9;
const int in1 = 6;
const int in2 = 7;
const int led = 12;
#define TRIG_PIN 4
#define ECHO_PIN 3

const int openTimeMs = 600;   // how long motor should run to open tap
const int closeTimeMs = 700;  // how long to close
const int onTime = 300;        // motor ON duration (ms) per burst
const int offTime = 70;        // motor OFF pause (ms) per burst

void setup() {
  pinMode(enA, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(led, OUTPUT);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  Serial.begin(9600);
  stopMotor();
  Serial.println("Automatic Tap Initialized");
}

void loop() {
  static int tapState = 0; // 0 = closed, 1 = open


  if (isDetectedStable()) {
    digitalWrite(led, HIGH);
    if (tapState == 0) {
      openTap();
      tapState = 1;
    }
    
  } else {
    digitalWrite(led, LOW);
    if (tapState == 1) {
      closeTap();
      tapState = 0;
    }

  }

  delay(100);
}

// --- Smooth, full-power slow movement ---
void slowStrongMove(int direction, int durationMs) {
  unsigned long start = millis();
  while (millis() - start < durationMs) {
    if (direction > 0) {         // Forward
      digitalWrite(in1, HIGH);
      digitalWrite(in2, LOW);
    } else {                     // Reverse
      digitalWrite(in1, LOW);
      digitalWrite(in2, HIGH);
    }
    analogWrite(enA, 250);       // full torque
    delay(onTime);               // short pulse
    analogWrite(enA, 0);         // pause
    delay(offTime);
  }
  stopMotor();
}

// --- Tap actions ---
void openTap() {
  Serial.println("Opening tap...");
  slowStrongMove(1, openTimeMs);
  Serial.println("Tap opened.");
}

void closeTap() {
  Serial.println("Closing tap...");
  slowStrongMove(-1, closeTimeMs);
  Serial.println("Tap closed.");
}

void stopMotor() {
  analogWrite(enA, 0);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
}

// --- IR filtering for reliable detection ---
bool isDetectedStable() {
  int count = 0;
  for (int i = 0; i < 5; ++i) {
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);

    // Measure pulse from ECHO
    long duration = pulseIn(ECHO_PIN, HIGH);
    float distance = duration / 58.0;  // distance in cm
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");
    if (distance >=3 && distance <= 18 ) count++;
    delay(50);
  }
  return (count >= 3);
}
